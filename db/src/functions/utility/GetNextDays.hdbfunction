-- FUNCTION "GetNextDays"(isStartDate INTEGER , kpiType NVARCHAR(20) )
-- RETURNS result NVARCHAR(10)
-- LANGUAGE SQLSCRIPT
-- SQL SECURITY INVOKER AS
-- BEGIN
-- DECLARE currentDateVal DATE := CURRENT_DATE;
    
-- DECLARE startDateVal DATE := ADD_DAYS(currentDateVal, 1);

-- DECLARE startDateMonthVal INTEGER := MONTH(startDateVal);
-- DECLARE startDateMonth NVARCHAR(10) := '';

-- DECLARE startDateDayVal INTEGER := DAYOFMONTH(startDateVal);
-- DECLARE startDateDay NVARCHAR(10) := '';

-- DECLARE endDateVal DATE;

-- IF kpiType = 'Tomorrow' THEN
--   endDateVal := ADD_DAYS(currentDateVal, 1);
-- ELSEIF kpiType = 'Next3Days' THEN
--   endDateVal := ADD_DAYS(currentDateVal, 3);
-- ELSEIF kpiType = 'Next5Days' THEN
--   endDateVal := ADD_DAYS(currentDateVal, 5);
-- ELSEIF kpiType = 'Next10Days' THEN
--   endDateVal := ADD_DAYS(currentDateVal, 10);
-- END IF;

-- DECLARE endDateMonthVal INTEGER := MONTH(endDateVal);
-- DECLARE endDateMonth NVARCHAR(10) := '';

-- DECLARE endDateDayVal INTEGER := DAYOFMONTH(endDateVal);
-- DECLARE endDateDay NVARCHAR(10) := '';

-- -- Format month of start date
-- IF startDateMonthVal < 10 THEN
--     startDateMonth := '0' || startDateMonthVal;
-- ELSE
--     startDateMonth := startDateMonthVal;
-- END IF;

-- -- Format day of start date
-- IF startDateDayVal < 10 THEN
--     startDateDay := '0' || startDateDayVal;
-- ELSE
--     startDateDay := startDateDayVal;
-- END IF;

-- -- Format month of end date
-- IF endDateMonthVal < 10 THEN
--     endDateMonth := '0' || endDateMonthVal;
-- ELSE
--     endDateMonth := endDateMonthVal;
-- END IF;

-- -- Format day of end date
-- IF endDateDayVal < 10 THEN
--     endDateDay := '0' || endDateDayVal;
-- ELSE
--     endDateDay := endDateDayVal;
-- END IF;

-- IF isStartDate = 1 THEN
--     -- result := (YEAR(startDateVal)) || startDateMonth || startDateDay;
--     result := '20210926';
-- ELSE
--     -- result := (YEAR(endDateVal)) || endDateMonth || endDateDay;
--     result := '20210930';
-- END IF;
-- END;

FUNCTION "GetNextDays"(isStartDate INTEGER, kpiType NVARCHAR(20))
RETURNS result NVARCHAR(10)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER AS
BEGIN

  DECLARE currentDateVal DATE;
  DECLARE startDateVal DATE;
  DECLARE startDateMonthVal INTEGER;
  DECLARE startDateMonth NVARCHAR(10);
  DECLARE startDateDayVal INTEGER;
  DECLARE startDateDay NVARCHAR(10);
  DECLARE endDateVal DATE;
  DECLARE endDateMonthVal INTEGER;
  DECLARE endDateMonth NVARCHAR(10);
  DECLARE endDateDayVal INTEGER;
  DECLARE endDateDay NVARCHAR(10);

  currentDateVal := CURRENT_DATE;
  startDateVal := ADD_DAYS(currentDateVal, 1);
  startDateMonthVal := MONTH(startDateVal);
  startDateDayVal := DAYOFMONTH(startDateVal);
  
  IF kpiType = 'Tomorrow' THEN
    endDateVal := ADD_DAYS(currentDateVal, 1);
  ELSEIF kpiType = 'Next3Days' THEN
    endDateVal := ADD_DAYS(currentDateVal, 3);
  ELSEIF kpiType = 'Next5Days' THEN
    endDateVal := ADD_DAYS(currentDateVal, 5);
  ELSEIF kpiType = 'Next10Days' THEN
    endDateVal := ADD_DAYS(currentDateVal, 10);
  END IF;

  endDateMonthVal := MONTH(endDateVal);
  endDateDayVal := DAYOFMONTH(endDateVal);

  -- Format month of start date
  IF startDateMonthVal < 10 THEN
    startDateMonth := '0' || startDateMonthVal;
  ELSE
    startDateMonth := startDateMonthVal;
  END IF;

  -- Format day of start date
  IF startDateDayVal < 10 THEN
    startDateDay := '0' || startDateDayVal;
  ELSE
    startDateDay := startDateDayVal;
  END IF;

  -- Format month of end date
  IF endDateMonthVal < 10 THEN
    endDateMonth := '0' || endDateMonthVal;
  ELSE
    endDateMonth := endDateMonthVal;
  END IF;

  -- Format day of end date
  IF endDateDayVal < 10 THEN
    endDateDay := '0' || endDateDayVal;
  ELSE
    endDateDay := endDateDayVal;
  END IF;

  IF isStartDate = 1 THEN
    result := (YEAR(startDateVal)) || startDateMonth || startDateDay;
    -- result := '20210926';
  ELSE
    result := (YEAR(endDateVal)) || endDateMonth || endDateDay;
    -- result := '20210930';
  END IF;

END;
